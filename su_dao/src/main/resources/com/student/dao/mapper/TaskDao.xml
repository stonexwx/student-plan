<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.dao.mapper.TaskDao">

    <resultMap type="com.student.entity.Task" id="TaskMap">
        <result property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TaskMap">
        select
          tid, uid, content, start_time, end_time, state
        from task
        where tid = #{tid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TaskMap">
        select
          tid, uid, content, start_time, end_time, state
        from task
        <where>
            <if test="tid != null">
                and tid = #{tid}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="startTime != null">
                and start_time = #{startTime}
            </if>
            <if test="endTime != null">
                and end_time = #{endTime}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from task
        <where>
            <if test="tid != null">
                and tid = #{tid}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="startTime != null">
                and start_time = #{startTime}
            </if>
            <if test="endTime != null">
                and end_time = #{endTime}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="tid" useGeneratedKeys="true">
        insert into task(uid, content, start_time, end_time, state)
        values (#{uid}, #{content}, #{startTime}, #{endTime}, #{state})
    </insert>

    <insert id="insertBatch" keyProperty="tid" useGeneratedKeys="true">
        insert into task(uid, content, start_time, end_time, state)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.uid}, #{entity.content}, #{entity.startTime}, #{entity.endTime}, #{entity.state})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="tid" useGeneratedKeys="true">
        insert into task(uid, content, start_time, end_time, state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uid}, #{entity.content}, #{entity.startTime}, #{entity.endTime}, #{entity.state})
        </foreach>
        on duplicate key update
        uid = values(uid),
        content = values(content),
        start_time = values(start_time),
        end_time = values(end_time),
        state = values(state)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update task
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
        </set>
        where tid = #{tid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from task where tid = #{tid}
    </delete>

</mapper>

